{"version":3,"sources":["components/Styles.js","components/ProfilePage.js","components/MatchPage.js","App.js","serviceWorker.js","index.js"],"names":["Container","styled","body","ContainerCard","div","Header","InfoProfile","ImageProfile","img","Footer","ContainerMatches","ProfileMatch","ImageCircle","theme","createMuiTheme","palette","primary","main","secondary","ProfilePage","props","useState","getProfile","setGetProfile","profiles","axios","get","then","response","data","profile","catch","err","console","log","onClickSendChoice","value","id","choice","post","isMatch","alert","useEffect","Button","onClick","changePage","size","variant","src","photo","alt","name","age","bio","MuiThemeProvider","cursor","color","put","MatchPage","getMatches","setGetMatches","matches","getMatch","map","info","App","currentPage","setCurrentPage","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.a0d8713c.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Container = styled.body`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: rgb(250, 231, 216);\r\n`;\r\n\r\nexport const ContainerCard = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 400px;\r\n  height: 700px;\r\n  border-radius: 15px 50px;\r\n  border: solid white;\r\n  background-color: rgb(249, 178, 78);\r\n  box-shadow: 5px 5px 10px gray;\r\n`;\r\n\r\n// ================PROFILEPAGE==================\r\n\r\nexport const Header = styled.div`\r\n  display: flex;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 10%;\r\n`;\r\n\r\nexport const InfoProfile = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 85%;\r\n  height: 75%;\r\n`;\r\n\r\nexport const ImageProfile = styled.img`\r\n  display: flex;\r\n  width: 350px;\r\n  height: 400px;\r\n  border: solid white;\r\n  box-shadow: 3px 3px 20px gray;\r\n`;\r\n\r\nexport const Footer = styled.div`\r\n  display: flex;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 15%;\r\n`;\r\n\r\n// ================MATCHPAGE==================\r\n\r\nexport const ContainerMatches = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const ProfileMatch = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 115px;\r\n  height: 115px;\r\n`;\r\n\r\nexport const ImageCircle = styled.img`\r\n  display: flex;\r\n  border-radius: 50px;\r\n  width: 80px;\r\n  height: 80px;\r\n  border: solid white;\r\n  box-shadow: 3px 3px 20px gray;\r\n`;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { createMuiTheme, MuiThemeProvider } from \"@material-ui/core\";\r\n\r\nimport ButtonChangeToMatches from \"@material-ui/core/Button\";\r\n\r\nimport CheckIcon from \"@material-ui/icons/CheckCircleOutline\";\r\nimport DeclineIcon from \"@material-ui/icons/HighlightOff\";\r\nimport UpdateIcon from \"@material-ui/icons/Update\";\r\n\r\nimport {\r\n  Container,\r\n  ImageProfile,\r\n  ContainerCard,\r\n  Header,\r\n  Footer,\r\n  InfoProfile,\r\n} from \"./Styles\";\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#FF0000\",\r\n    },\r\n    secondary: {\r\n      main: \"#FF0000\",\r\n    },\r\n  },\r\n});\r\n\r\nexport default function ProfilePage(props) {\r\n  const [getProfile, setGetProfile] = useState({});\r\n\r\n  // FUNÇÃO PARA ALIMENTAR O ESTADO GETPROFILE COM AS INFOS\r\n  const profiles = () => {\r\n    axios\r\n      .get(\r\n        \"https://us-central1-missao-newton.cloudfunctions.net/astroMatch/israel-cavalcanti/person\"\r\n      )\r\n      .then((response) => {\r\n        setGetProfile(response.data.profile);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  // ONCLICK PARA ENVIAR PARA A API SE O \"CHOICE\" É TRUE OU FALSE\r\n  const onClickSendChoice = (value) => {\r\n    const body = {\r\n      id: getProfile.id,\r\n      choice: value,\r\n    };\r\n\r\n    axios\r\n      .post(\r\n        \"https://us-central1-missao-newton.cloudfunctions.net/astroMatch/israel-cavalcanti/choose-person\",\r\n        body\r\n      )\r\n      .then((response) => {\r\n        profiles();\r\n\r\n        if (response.data.isMatch === true) alert(\"Deu match!\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  // PARA RESETAR OS MATCHES E OS PROFILES\r\n  const resetProfiles = () => {\r\n    axios\r\n      .put(\r\n        \"https://us-central1-missao-newton.cloudfunctions.net/astroMatch/israel-cavalcanti/clear\"\r\n      )\r\n      .then(() => {\r\n        profiles();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  // USEEFFECT PARA QUANDO CARREGAR A PÁGINA, SER CARREGADO NO ESTADO UM PROFILE ALEATÓRIO (API) E COM AS INFOS DELE, EXECUTAR O JSX\r\n  useEffect(() => {\r\n    profiles();\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <ContainerCard>\r\n        <Header>\r\n          <h2>Astromatch</h2>\r\n          <ButtonChangeToMatches\r\n            onClick={props.changePage}\r\n            size=\"small\"\r\n            variant=\"outlined\"\r\n          >\r\n            Ver Matches\r\n          </ButtonChangeToMatches>\r\n        </Header>\r\n        <InfoProfile>\r\n          <ImageProfile src={getProfile.photo} alt=\"imagem\" />\r\n          <h3>\r\n            {getProfile.name}, {getProfile.age}\r\n          </h3>\r\n          <p>{getProfile.bio}</p>\r\n        </InfoProfile>\r\n        <Footer>\r\n          <MuiThemeProvider theme={theme}>\r\n            <CheckIcon\r\n              onClick={() => onClickSendChoice(true)}\r\n              cursor=\"pointer\"\r\n              color=\"primary\"\r\n            >\r\n              Sim\r\n            </CheckIcon>\r\n            <DeclineIcon\r\n              onClick={() => onClickSendChoice(false)}\r\n              cursor=\"pointer\"\r\n              color=\"secondary\"\r\n            >\r\n              Não\r\n            </DeclineIcon>\r\n          </MuiThemeProvider>\r\n        </Footer>\r\n        <UpdateIcon onClick={resetProfiles} size=\"small\" cursor=\"pointer\">\r\n          Reset\r\n        </UpdateIcon>\r\n      </ContainerCard>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport ButtonChangeToProfiles from \"@material-ui/core/Button\";\r\n\r\nimport {\r\n  Container,\r\n  Header,\r\n  ImageCircle,\r\n  ContainerCard,\r\n  ContainerMatches,\r\n  ProfileMatch,\r\n} from \"./Styles\";\r\n\r\nexport default function MatchPage(props) {\r\n  const [getMatches, setGetMatches] = useState([]);\r\n\r\n  const matches = () => {\r\n    axios\r\n      .get(\r\n        \"https://us-central1-missao-newton.cloudfunctions.net/astroMatch/israel-cavalcanti/matches\"\r\n      )\r\n      .then((response) => {\r\n        setGetMatches(response.data.matches);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    matches();\r\n  }, [props.id]);\r\n\r\n  const getMatch = getMatches.map((info) => {\r\n    return (\r\n      <ProfileMatch>\r\n        <ImageCircle src={info.photo} alt=\"imagem\" />\r\n        <span>{info.name}</span>\r\n      </ProfileMatch>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <Container>\r\n      <ContainerCard>\r\n        <Header>\r\n          <h2>Matches</h2>\r\n          <ButtonChangeToProfiles onClick={props.changePage} size=\"small\">\r\n            Ver Perfis\r\n          </ButtonChangeToProfiles>\r\n        </Header>\r\n        <ContainerMatches>{getMatch}</ContainerMatches>\r\n      </ContainerCard>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\nimport ProfilePage from \"./components/ProfilePage\";\nimport MatchPage from \"./components/MatchPage\";\n\nfunction App() {\n  const [currentPage, setCurrentPage] = useState(\"ProfilePage\");\n\n  const changePage = () => {\n    if (currentPage === \"ProfilePage\") {\n      setCurrentPage(\"MatchPage\");\n    } else {\n      setCurrentPage(\"ProfilePage\");\n    }\n  };\n\n  return currentPage === \"ProfilePage\" ? (\n    <ProfilePage changePage={changePage} />\n  ) : (\n    <MatchPage changePage={changePage} />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}