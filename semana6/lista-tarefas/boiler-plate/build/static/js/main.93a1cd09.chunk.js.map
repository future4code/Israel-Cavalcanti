{"version":3,"sources":["App.js","index.js"],"names":["TarefaList","styled","ul","_templateObject","Tarefa","li","_templateObject2","completa","InputsContainer","div","_templateObject3","App","React","Component","[object Object]","args","super","this","state","tarefas","id","Date","now","texto","inputValue","filter","onChangeInput","event","setState","target","value","criaTarefa","novaTarefa","novaListaTarefa","selectTarefa","map","tarefa","idAtual","onChangeFilter","componentDidUpdate","componentDidMount","render","listaFiltrada","react_default","a","createElement","className","onChange","onClick","rootElement","document","getElementById","ReactDOM","src_App"],"mappings":"qjBAIA,MAAMA,EAAaC,IAAOC,GAAVC,KAKVC,EAASH,IAAOI,GAAVC,IAES,EAAGC,cAAgBA,EAAW,eAAiB,QAG9DC,EAAkBP,IAAOQ,IAAVC,KA2GNC,MArGf,cAAkBC,IAAMC,UAAUC,eAAAC,GAAAC,SAAAD,GAAAE,KAChCC,MAAQ,CACNC,QAAS,CACP,CACEC,GAAIC,KAAKC,MACTC,MAAO,GACPhB,UAAU,GAEZ,CACEa,GAAIC,KAAKC,MACTC,MAAO,GACPhB,UAAU,IAGdiB,WAAY,GACZC,OAAQ,IAfsBR,KAsBhCS,cAAiBC,KACfV,KAAKW,SAAS,CAAEJ,WAAYG,EAAME,OAAOC,UAvBXb,KA0BhCc,WAAa,MACX,MAAMC,EAAa,CAEjBZ,GAAIC,KAAKC,MACTC,MAAON,KAAKC,MAAMM,WAClBjB,UAAU,GAGN0B,EAAkB,IAAIhB,KAAKC,MAAMC,QAASa,GAEhDf,KAAKW,SAAS,CAAET,QAASc,IACzBhB,KAAKC,MAAMM,WAAa,KArCMP,KAwChCiB,aAAgBd,KACGH,KAAKC,MAAMC,QAAQgB,IAAKC,IACvC,MAAMC,EAAUjB,EAChB,OAAIgB,EAAOhB,KAAOA,EACT,CAAEb,UAAW6B,EAAO7B,SAAUgB,MAAOa,EAAOb,MAAOH,GAAIiB,GAEvDD,MA9CmBnB,KAmDhCqB,eAAkBX,KAChBV,KAAKW,SAAS,CAAEH,OAAQE,EAAME,OAAOC,UAlCvCS,sBAEAC,qBAmCAC,SACE,MAAMC,EAAgBzB,KAAKC,MAAMC,QAAQM,OAAQW,IAC/C,OAAQnB,KAAKC,MAAMO,QACjB,IAAK,YACH,OAAQW,EAAO7B,SACjB,IAAK,YACH,OAAO6B,EAAO7B,SAChB,QACE,OAAO,KAIb,OACEoC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAACrC,EAAD,KACEmC,EAAAC,EAAAC,cAAA,SAAOf,MAAOb,KAAKC,MAAMM,WAAYuB,SAAU9B,KAAKS,gBACpDiB,EAAAC,EAAAC,cAAA,UAAQG,QAAS/B,KAAKc,YAAtB,cAEFY,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAACrC,EAAD,KACEmC,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,UAAQf,MAAOb,KAAKC,MAAMO,OAAQsB,SAAU9B,KAAKqB,gBAC/CK,EAAAC,EAAAC,cAAA,UAAQf,MAAM,IAAd,UACAa,EAAAC,EAAAC,cAAA,UAAQf,MAAM,aAAd,aACAa,EAAAC,EAAAC,cAAA,UAAQf,MAAM,aAAd,eAGJa,EAAAC,EAAAC,cAAC7C,EAAD,KACG0C,EAAcP,IAAKC,GAEhBO,EAAAC,EAAAC,cAACzC,EAAD,CACEG,SAAU6B,EAAO7B,SACjByC,QAAS,IAAM/B,KAAKiB,aAAaE,EAAOhB,KAEvCgB,EAAOb,YC3GxB,MAAM0B,EAAcC,SAASC,eAAe,QAC5CC,IAASX,OAAOE,EAAAC,EAAAC,cAACQ,EAAD,MAASJ","file":"static/js/main.93a1cd09.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport \"./styles.css\";\n\nconst TarefaList = styled.ul`\n  padding: 0;\n  width: 200px;\n`;\n\nconst Tarefa = styled.li`\n  text-align: left;\n  text-decoration: ${({ completa }) => (completa ? \"line-through\" : \"none\")};\n`;\n\nconst InputsContainer = styled.div`\n  display: grid;\n  grid-auto-flow: column;\n  gap: 10px;\n`;\n\nclass App extends React.Component {\n  state = {\n    tarefas: [\n      {\n        id: Date.now(), // Gera um id para cada tarefa, assim podemos identificar qual foi clicada para marcar como completa\n        texto: \"\",\n        completa: false, // Indica se a tarefa está completa (true ou false)\n      },\n      {\n        id: Date.now(), // Gera um id para cada tarefa, assim podemos identificar qual foi clicada para marcar como completa\n        texto: \"\",\n        completa: !false, // Indica se a tarefa está completa (true ou false)\n      },\n    ],\n    inputValue: \"\",\n    filter: \"\",\n  };\n\n  componentDidUpdate() {}\n\n  componentDidMount() {}\n\n  onChangeInput = (event) => {\n    this.setState({ inputValue: event.target.value }); // 1. permite que possa ser inserido um valor no input\n  };\n\n  criaTarefa = () => {\n    const novaTarefa = {\n      // 2. cria um novo objeto para o array tarefas\n      id: Date.now(),\n      texto: this.state.inputValue,\n      completa: false,\n    };\n\n    const novaListaTarefa = [...this.state.tarefas, novaTarefa]; // 3. Cria uma cópia do array tarefas no state\n\n    this.setState({ tarefas: novaListaTarefa }); // 4. diz para o state que esse é o novo array para o array tarefas\n    this.state.inputValue = \"\"; // 5. limpa o input assim que clicar em adicionar\n  };\n\n  selectTarefa = (id) => {\n    const idTarefa = this.state.tarefas.map((tarefa) => {\n      const idAtual = id;\n      if (tarefa.id === id) {\n        return { completa: !tarefa.completa, texto: tarefa.texto, id: idAtual };\n      } else {\n        return tarefa;\n      }\n    });\n  };\n\n  onChangeFilter = (event) => {\n    this.setState({ filter: event.target.value }); // permite selecionar no Filtro qual o tipo de tarefa\n  };\n\n  render() {\n    const listaFiltrada = this.state.tarefas.filter((tarefa) => {\n      switch (this.state.filter) {\n        case \"pendentes\":\n          return !tarefa.completa;\n        case \"completas\":\n          return tarefa.completa;\n        default:\n          return true;\n      }\n    });\n\n    return (\n      <div className=\"App\">\n        <h1>Lista de tarefas</h1>\n        <InputsContainer>\n          <input value={this.state.inputValue} onChange={this.onChangeInput} />\n          <button onClick={this.criaTarefa}>Adicionar</button>\n        </InputsContainer>\n        <br />\n\n        <InputsContainer>\n          <label>Filtro</label>\n          <select value={this.state.filter} onChange={this.onChangeFilter}>\n            <option value=\"\">Nenhum</option>\n            <option value=\"pendentes\">Pendentes</option>\n            <option value=\"completas\">Completas</option>\n          </select>\n        </InputsContainer>\n        <TarefaList>\n          {listaFiltrada.map((tarefa) => {\n            return (\n              <Tarefa\n                completa={tarefa.completa}\n                onClick={() => this.selectTarefa(tarefa.id)}\n              >\n                {tarefa.texto}\n              </Tarefa>\n            );\n          })}\n        </TarefaList>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from './App'\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}